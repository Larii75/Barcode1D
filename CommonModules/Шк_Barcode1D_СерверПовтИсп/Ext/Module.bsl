///Copyright (c) 2021, https://github.com/Larii75 Linchenko Andrii
///
///Разрешается повторное распространение и использование как в виде исходного кода, так и в двоичной форме, с изменениями или без, при соблюдении следующих условий:
///
///При повторном распространении исходного кода должно оставаться указанное выше уведомление об авторском праве, этот список условий и последующий отказ от гарантий.
///При повторном распространении двоичного кода должна сохраняться указанная выше информация об авторском праве, этот список условий и последующий отказ от гарантий 
///в документации и/или в других материалах, поставляемых при распространении. 
///Ни название <Организации>, ни имена её сотрудников не могут быть использованы в качестве поддержки или продвижения продуктов, основанных на этом ПО без предварительного письменного разрешения.
///ЭТА ПРОГРАММА ПРЕДОСТАВЛЕНА ВЛАДЕЛЬЦАМИ АВТОРСКИХ ПРАВ И/ИЛИ ДРУГИМИ СТОРОНАМИ «КАК ОНА ЕСТЬ» БЕЗ КАКОГО-ЛИБО ВИДА ГАРАНТИЙ, ВЫРАЖЕННЫХ ЯВНО ИЛИ ПОДРАЗУМЕВАЕМЫХ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ИМИ, 
///ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ КОММЕРЧЕСКОЙ ЦЕННОСТИ И ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ ЦЕЛИ. 
///НИ В КОЕМ СЛУЧАЕ НИ ОДИН ВЛАДЕЛЕЦ АВТОРСКИХ ПРАВ И НИ ОДНО ДРУГОЕ ЛИЦО, КОТОРОЕ МОЖЕТ ИЗМЕНЯТЬ И/ИЛИ ПОВТОРНО РАСПРОСТРАНЯТЬ ПРОГРАММУ, КАК БЫЛО СКАЗАНО ВЫШЕ, НЕ НЕСЁТ ОТВЕТСТВЕННОСТИ,
///ВКЛЮЧАЯ ЛЮБЫЕ ОБЩИЕ, СЛУЧАЙНЫЕ, СПЕЦИАЛЬНЫЕ ИЛИ ПОСЛЕДОВАВШИЕ УБЫТКИ, ВСЛЕДСТВИЕ ИСПОЛЬЗОВАНИЯ ИЛИ НЕВОЗМОЖНОСТИ ИСПОЛЬЗОВАНИЯ ПРОГРАММЫ 
///(ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ПОТЕРЕЙ ДАННЫХ, ИЛИ ДАННЫМИ, СТАВШИМИ НЕПРАВИЛЬНЫМИ, ИЛИ ПОТЕРЯМИ, ПРИНЕСЕННЫМИ ИЗ-ЗА ВАС ИЛИ ТРЕТЬИХ ЛИЦ, 
///ИЛИ ОТКАЗОМ ПРОГРАММЫ РАБОТАТЬ СОВМЕСТНО С ДРУГИМИ ПРОГРАММАМИ), ДАЖЕ ЕСЛИ ТАКОЙ ВЛАДЕЛЕЦ ИЛИ ДРУГОЕ ЛИЦО БЫЛИ ИЗВЕЩЕНЫ О ВОЗМОЖНОСТИ ТАКИХ УБЫТКОВ.
///
///Copyright (c) 2021, https://github.com/Larii75 Linchenko Andrii All rights reserved.
///
///Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
///
///Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
///Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
///Neither the name of the <ORGANIZATION> nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
///THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
///THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER 
///OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
///PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
///LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
///EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Функция - Формула кодировки MSI
//
// Параметры:
//  ТипШтрихкода - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиMSI() Экспорт
	
	Результат = Новый Соответствие;
	Результат.Вставить("0", "100100100100");
	Результат.Вставить("1", "100100100110");
	Результат.Вставить("2", "100100110100");
	Результат.Вставить("3", "100100110110");
	Результат.Вставить("4", "100110100100");
	Результат.Вставить("5", "100110100110");
	Результат.Вставить("6", "100110110100");
	Результат.Вставить("7", "100110110110");
	Результат.Вставить("8", "110100100100");
	Результат.Вставить("9", "110100100110");
	
	Возврат Результат;
	
КонецФункции // ФормулаКодировкиMSI()

// Функция - Формула кодировки символов EAN
//
// Параметры:
//  ТипШтрихкода - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиСимволовEAN(ЗНАЧ ТипШтрихкода) Экспорт	
	
	Результат = Новый Соответствие;
	Если ТипШтрихкода = "EAN13" Тогда
		Результат.Вставить("0", "LLLLLLRRRRRR");
		Результат.Вставить("1", "LLGLGGRRRRRR");	
		Результат.Вставить("2", "LLGGLGRRRRRR");	
		Результат.Вставить("3", "LLGGGLRRRRRR");	
		Результат.Вставить("4", "LGLLGGRRRRRR");	
		Результат.Вставить("5", "LGGLLGRRRRRR");	
		Результат.Вставить("6", "LGGGLLRRRRRR");	
		Результат.Вставить("7", "LGLGLGRRRRRR");	
		Результат.Вставить("8", "LGLGGLRRRRRR");	
		Результат.Вставить("9", "LGGLGLRRRRRR");
	ИначеЕсли ТипШтрихкода = "EAN8" Тогда
	    Результат.Вставить("0", "LLLLRRRR");
		Результат.Вставить("1", "LLLLRRRR");	
		Результат.Вставить("2", "LLLLRRRR");	
		Результат.Вставить("3", "LLLLRRRR");	
		Результат.Вставить("4", "LLLLRRRR");	
		Результат.Вставить("5", "LLLLRRRR");	
		Результат.Вставить("6", "LLLLRRRR");	
		Результат.Вставить("7", "LLLLRRRR");	
		Результат.Вставить("8", "LLLLRRRR");	
		Результат.Вставить("9", "LLLLRRRR");
	ИначеЕсли ТипШтрихкода = "EAN13AddOn2" Тогда
		Результат.Вставить("00", "LL");
		Результат.Вставить("01", "LG");
		Результат.Вставить("02", "GL");
		Результат.Вставить("03", "GG");
		Результат.Вставить("04", "LL");
		Результат.Вставить("05", "LG");
		Результат.Вставить("06", "GL");
		Результат.Вставить("07", "GG");
		Результат.Вставить("08", "LL");
		Результат.Вставить("09", "LG");
		Результат.Вставить("10", "GL");
		Результат.Вставить("11", "GG");
		Результат.Вставить("12", "LL");
		Результат.Вставить("13", "LG");
		Результат.Вставить("14", "GL");
		Результат.Вставить("15", "GG");
		Результат.Вставить("16", "LL");
		Результат.Вставить("17", "LG");
		Результат.Вставить("18", "GL");
		Результат.Вставить("19", "GG");
		Результат.Вставить("20", "LL");
		Результат.Вставить("21", "LG");
		Результат.Вставить("22", "GL");
		Результат.Вставить("23", "GG");
		Результат.Вставить("24", "LL");
		Результат.Вставить("25", "LG");
		Результат.Вставить("26", "GL");
		Результат.Вставить("27", "GG");
		Результат.Вставить("28", "LL");
		Результат.Вставить("29", "LG");
		Результат.Вставить("30", "GL");
		Результат.Вставить("31", "GG");
		Результат.Вставить("32", "LL");
		Результат.Вставить("33", "LG");
		Результат.Вставить("34", "GL");
		Результат.Вставить("35", "GG");
		Результат.Вставить("36", "LL");
		Результат.Вставить("37", "LG");
		Результат.Вставить("38", "GL");
		Результат.Вставить("39", "GG");
		Результат.Вставить("40", "LL");
		Результат.Вставить("41", "LG");
		Результат.Вставить("42", "GL");
		Результат.Вставить("43", "GG");
		Результат.Вставить("44", "LL");
		Результат.Вставить("45", "LG");
		Результат.Вставить("46", "GL");
		Результат.Вставить("47", "GG");
		Результат.Вставить("48", "LL");		
		Результат.Вставить("49", "LG");
		Результат.Вставить("50", "GL");
		Результат.Вставить("51", "GG");
		Результат.Вставить("52", "LL");
		Результат.Вставить("53", "LG");
		Результат.Вставить("54", "GL");
		Результат.Вставить("55", "GG");
		Результат.Вставить("56", "LL");
		Результат.Вставить("57", "LG");
		Результат.Вставить("58", "GL");
		Результат.Вставить("59", "GG");
		Результат.Вставить("60", "LL");
		Результат.Вставить("61", "LG");
		Результат.Вставить("62", "GL");
		Результат.Вставить("63", "GG");
		Результат.Вставить("64", "LL");
		Результат.Вставить("65", "LG");
		Результат.Вставить("66", "GL");
		Результат.Вставить("67", "GG");
		Результат.Вставить("68", "LL");
		Результат.Вставить("69", "LG");
		Результат.Вставить("70", "GL");
		Результат.Вставить("71", "GG");
		Результат.Вставить("72", "LL");
		Результат.Вставить("73", "LG");
		Результат.Вставить("74", "GL");
		Результат.Вставить("75", "GG");
		Результат.Вставить("76", "LL");
		Результат.Вставить("77", "LG");
		Результат.Вставить("78", "GL");
		Результат.Вставить("79", "GG");
		Результат.Вставить("80", "LL");
		Результат.Вставить("81", "LG");
		Результат.Вставить("82", "GL");
		Результат.Вставить("83", "GG");
		Результат.Вставить("84", "LL");
		Результат.Вставить("85", "LG");
		Результат.Вставить("86", "GL");
		Результат.Вставить("87", "GG");
		Результат.Вставить("88", "LL");
		Результат.Вставить("89", "LG");
		Результат.Вставить("90", "GL");
		Результат.Вставить("91", "GG");
		Результат.Вставить("92", "LL");
		Результат.Вставить("93", "LG");
		Результат.Вставить("94", "GL");
		Результат.Вставить("95", "GG");
		Результат.Вставить("96", "LL");
		Результат.Вставить("97", "LG");
		Результат.Вставить("98", "GL");
		Результат.Вставить("99", "GG");
	ИначеЕсли ТипШтрихкода = "EAN13AddOn5" Тогда
		Результат.Вставить("0",	"GGLLL");
		Результат.Вставить("1",	"GLGLL");
		Результат.Вставить("2",	"GLLGL");
		Результат.Вставить("3",	"GLLLG");
		Результат.Вставить("4",	"LGGLL");
		Результат.Вставить("5",	"LLGGL");
		Результат.Вставить("6",	"LLLGG");
		Результат.Вставить("7",	"LGLGL");
		Результат.Вставить("8",	"LGLLG");
		Результат.Вставить("9",	"LLGLG");
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

// Функция - Формула кодировки символов39
//
// Параметры:
//  ТипШтрихкода - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиСимволов39() Экспорт	
	
	Результат = Новый Соответствие;
	Результат.Вставить("0", "101000111011101");
	Результат.Вставить("1", "111010001010111");
	Результат.Вставить("2", "101110001010111");
	Результат.Вставить("3", "111011100010101");
	Результат.Вставить("4", "101000111010111");
	Результат.Вставить("5", "111010001110101");
	Результат.Вставить("6", "101110001110101");
	Результат.Вставить("7", "101000101110111");
	Результат.Вставить("8", "111010001011101");
	Результат.Вставить("9", "101110001011101");
	Результат.Вставить("A", "111010100010111");
	Результат.Вставить("B", "101110100010111");
	Результат.Вставить("C", "111011101000101");
	Результат.Вставить("D", "101011100010111");
	Результат.Вставить("E", "111010111000101");
	Результат.Вставить("F", "101110111000101");
	Результат.Вставить("G", "101010001110111");
	Результат.Вставить("H", "111010100011101");
	Результат.Вставить("I", "101110100011101");
	Результат.Вставить("J", "101011100011101");
	Результат.Вставить("K", "111010101000111");
	Результат.Вставить("L", "101110101000111");
	Результат.Вставить("M", "111011101010001");
	Результат.Вставить("N", "101011101000111");
	Результат.Вставить("O", "111010111010001");
	Результат.Вставить("P", "101110111010001");
	Результат.Вставить("Q", "101010111000111");
	Результат.Вставить("R", "111010101110001");
	Результат.Вставить("S", "101110101110001");
	Результат.Вставить("T", "101011101110001");
	Результат.Вставить("U", "111000101010111");
	Результат.Вставить("V", "100011101010111");
	Результат.Вставить("W", "111000111010101");
	Результат.Вставить("X", "100010111010111");
	Результат.Вставить("Y", "111000101110101");
	Результат.Вставить("Z", "100011101110101");
	Результат.Вставить("-", "100010101110111");
	Результат.Вставить(".", "111000101011101");
	Результат.Вставить(" ", "100011101011101");
	Результат.Вставить("$", "100010001000101");
	Результат.Вставить("/", "100010001010001");
	Результат.Вставить("+", "100010100010001");
	Результат.Вставить("%", "101000100010001");
		
	Возврат Результат;	
	
КонецФункции

// Функция - Формула кодировки символов39 full ASCII
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиСимволов39FullASCII() Экспорт
		
	Результат = Новый Соответствие;
	Результат.Вставить(0, "%U");
	Результат.Вставить(1, "$A");
	Результат.Вставить(2, "$B");
	Результат.Вставить(3, "$C");
	Результат.Вставить(4, "$D");
	Результат.Вставить(5, "$E");
	Результат.Вставить(6, "$F");
	Результат.Вставить(7, "$G");
	Результат.Вставить(8, "$H");
	Результат.Вставить(9, "$I");
	Результат.Вставить(10, "$J");
	Результат.Вставить(11, "$K");
	Результат.Вставить(12, "$L");
	Результат.Вставить(13, "$M");
	Результат.Вставить(14, "$N");
	Результат.Вставить(15, "$O");
	Результат.Вставить(16, "$P");
	Результат.Вставить(17, "$Q");
	Результат.Вставить(18, "$R");
	Результат.Вставить(19, "$S");
	Результат.Вставить(20, "$T");
	Результат.Вставить(21, "$U");
	Результат.Вставить(22, "$V");
	Результат.Вставить(23, "$W");
	Результат.Вставить(24, "$X");
	Результат.Вставить(25, "$Y");
	Результат.Вставить(26, "$Z");
	Результат.Вставить(27, "%A");
	Результат.Вставить(28, "%B");
	Результат.Вставить(29, "%C");
	Результат.Вставить(30, "%D");
	Результат.Вставить(31, "%E");
	Результат.Вставить(32, " ");
	Результат.Вставить(33, "/A");
	Результат.Вставить(34, "/B");
	Результат.Вставить(35, "/C");
	Результат.Вставить(36, "/D");
	Результат.Вставить(37, "/E");
	Результат.Вставить(38, "/F");
	Результат.Вставить(39, "/G");
	Результат.Вставить(40, "/H");
	Результат.Вставить(41, "/I");
	Результат.Вставить(42, "/J");
	Результат.Вставить(43, "/K");
	Результат.Вставить(44, "/L");
	Результат.Вставить(45, "-");
	Результат.Вставить(46, ".");
	Результат.Вставить(47, "/O");
	Результат.Вставить(48, "0");
	Результат.Вставить(49, "1");
	Результат.Вставить(50, "2");
	Результат.Вставить(51, "3");
	Результат.Вставить(52, "4");
	Результат.Вставить(53, "5");
	Результат.Вставить(54, "6");
	Результат.Вставить(55, "7");
	Результат.Вставить(56, "8");
	Результат.Вставить(57, "9");
	Результат.Вставить(58, "/Z");
	Результат.Вставить(59, "%F");
	Результат.Вставить(60, "%G");
	Результат.Вставить(61, "%H");
	Результат.Вставить(62, "%I");
	Результат.Вставить(63, "%J");
	Результат.Вставить(64, "%V");
	Результат.Вставить(65, "A");
	Результат.Вставить(66, "B");
	Результат.Вставить(67, "C");
	Результат.Вставить(68, "D");
	Результат.Вставить(69, "E");
	Результат.Вставить(70, "F");
	Результат.Вставить(71, "G");
	Результат.Вставить(72, "H");
	Результат.Вставить(73, "I");
	Результат.Вставить(74, "J");
	Результат.Вставить(75, "K");
	Результат.Вставить(76, "L");
	Результат.Вставить(77, "M");
	Результат.Вставить(78, "N");
	Результат.Вставить(79, "O");
	Результат.Вставить(80, "P");
	Результат.Вставить(81, "Q");
	Результат.Вставить(82, "R");
	Результат.Вставить(83, "S");
	Результат.Вставить(84, "T");
	Результат.Вставить(85, "U");
	Результат.Вставить(86, "V");
	Результат.Вставить(87, "W");
	Результат.Вставить(88, "X");
	Результат.Вставить(89, "Y");
	Результат.Вставить(90, "Z");
	Результат.Вставить(91, "%K");
	Результат.Вставить(92, "%L");
	Результат.Вставить(93, "%M");
	Результат.Вставить(94, "%N");
	Результат.Вставить(95, "%O");
	Результат.Вставить(96, "%W");
	Результат.Вставить(97, "+A");
	Результат.Вставить(98, "+B");
	Результат.Вставить(99, "+C");
	Результат.Вставить(100, "+D");
	Результат.Вставить(101, "+E");
	Результат.Вставить(102, "+F");
	Результат.Вставить(103, "+G");
	Результат.Вставить(104, "+H");
	Результат.Вставить(105, "+I");
	Результат.Вставить(106, "+J");
	Результат.Вставить(107, "+K");
	Результат.Вставить(108, "+L");
	Результат.Вставить(109, "+M");
	Результат.Вставить(110, "+N");
	Результат.Вставить(111, "+O");
	Результат.Вставить(112, "+P");
	Результат.Вставить(113, "+Q");
	Результат.Вставить(114, "+R");
	Результат.Вставить(115, "+S");
	Результат.Вставить(116, "+T");
	Результат.Вставить(117, "+U");
	Результат.Вставить(118, "+V");
	Результат.Вставить(119, "+W");
	Результат.Вставить(120, "+X");
	Результат.Вставить(121, "+Y");
	Результат.Вставить(122, "+Z");
	Результат.Вставить(123, "%P");
	Результат.Вставить(124, "%Q");
	Результат.Вставить(125, "%R");
	Результат.Вставить(126, "%S");
	Результат.Вставить(127, "%Z");
		
	Возврат Результат;
		
КонецФункции //ФормулаКодировкиСимволов39FullASCII()

// Функция - Формула кодировки символов codabar
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиСимволовCodabar() Экспорт
		
	Результат = Новый Соответствие;
	Результат.Вставить("0", "10101000111");
	Результат.Вставить("1", "10101110001");
	Результат.Вставить("2", "10100010111");
	Результат.Вставить("3", "11100010101");
	Результат.Вставить("4", "10111010001");
	Результат.Вставить("5", "11101010001");
	Результат.Вставить("6", "10001010111");
	Результат.Вставить("7", "10001011101");
	Результат.Вставить("8", "10001110101");
	Результат.Вставить("9", "11101000101");
	Результат.Вставить("A", "1011100010001");
	Результат.Вставить("B", "1000100010111");
	Результат.Вставить("C", "1010001000111");
	Результат.Вставить("D", "1010001110001");
	Результат.Вставить("-", "101000111010");
	Результат.Вставить(".", "1110111011101");
	Результат.Вставить(":", "1110101110111");
	Результат.Вставить("$", "101110001010");
	Результат.Вставить("/", "1110111010111");
	Результат.Вставить("+", "1011101110111");
			
	Возврат Результат;
		
КонецФункции //ФормулаКодировкиСимволовCodabar()

// Функция - Формула кодировки символов93
//
// Параметры:
//  ТипШтрихкода - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиСимволов93() Экспорт
		
	Результат = Новый Соответствие;
	Результат.Вставить("0", "100010100");
	Результат.Вставить("1", "101001000");
	Результат.Вставить("2", "101000100");
	Результат.Вставить("3", "101000010");
	Результат.Вставить("4", "100101000");
	Результат.Вставить("5", "100100100");
	Результат.Вставить("6", "100100010");
	Результат.Вставить("7", "101010000");
	Результат.Вставить("8", "100010010");
	Результат.Вставить("9", "100001010");
	Результат.Вставить("A", "110101000");
	Результат.Вставить("B", "110100100");
	Результат.Вставить("C", "110100010");
	Результат.Вставить("D", "110010100");
	Результат.Вставить("E", "110010010");
	Результат.Вставить("F", "110001010");
	Результат.Вставить("G", "101101000");
	Результат.Вставить("H", "101100100");
	Результат.Вставить("I", "101100010");
	Результат.Вставить("J", "100110100");
	Результат.Вставить("K", "100011010");
	Результат.Вставить("L", "101011000");
	Результат.Вставить("M", "101001100");
	Результат.Вставить("N", "101000110");
	Результат.Вставить("O", "100101100");
	Результат.Вставить("P", "100010110");
	Результат.Вставить("Q", "110110100");
	Результат.Вставить("R", "110110010");
	Результат.Вставить("S", "110101100");
	Результат.Вставить("T", "110100110");
	Результат.Вставить("U", "110010110");
	Результат.Вставить("V", "110011010");
	Результат.Вставить("W", "101101100");
	Результат.Вставить("X", "101100110");
	Результат.Вставить("Y", "100110110");
	Результат.Вставить("Z", "100111010");
	Результат.Вставить("-", "100101110");
	Результат.Вставить(".", "111010100");
	Результат.Вставить(" ", "111010010");
	Результат.Вставить("$", "111001010");
	Результат.Вставить("/", "101101110");
	Результат.Вставить("+", "101110110");
	Результат.Вставить("%", "110101110");
	///Start/stop * 101011110
	///Reverse stop  101111010
	Результат.Вставить("($)", "100100110");
	Результат.Вставить("(%)", "111011010");
	Результат.Вставить("(/)", "111010110");
	Результат.Вставить("(+)", "100110010");
	
	///structure:
	///A start character *
	///Encoded message
	///First modulo-47 check character "C"
	///Second modulo-47 check character "K"
	///Stop Character *
	///Termination bar
	
	Возврат Результат;
		
КонецФункции

// Функция - Формула кодировки символов Industrial2Of5
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиСимволовИндустриал2На5() Экспорт
		
	Результат = Новый Соответствие;
	Результат.Вставить("0", "1010111011101"); ///NSNSWSWSN
	Результат.Вставить("1", "1110101010111"); ///WSNSNSNSW	
	Результат.Вставить("2", "1011101010111"); ///NSWSNSNSW
	Результат.Вставить("3", "1110111010101"); ///WSWSNSNSN
	Результат.Вставить("4", "1010111010111"); ///NSNSWSNSW
	Результат.Вставить("5", "1110101110101"); ///WSNSWSNSN
	Результат.Вставить("6", "1011101110101"); ///NSWSWSNSN
	Результат.Вставить("7", "1010101110111"); ///NSNSNSWSW
	Результат.Вставить("8", "1110101011101"); ///WSNSNSWSN
	Результат.Вставить("9", "1011101011101"); ///NSWSNSWSN
	
	///Старт 111011101 WSWSN
	///Стоп 111010111 WSNSW
	///Между символами 0
	
	Возврат Результат;
		
КонецФункции

// Функция - Формула кодировки символов код11
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиСимволовКод11() Экспорт
		
	Результат = Новый Соответствие;
	Результат.Вставить("0", "1010111");
	Результат.Вставить("1", "111010111");
	Результат.Вставить("2", "100010111");
	Результат.Вставить("3", "111000101");
	Результат.Вставить("4", "101110111");
	Результат.Вставить("5", "111011101");
	Результат.Вставить("6", "100011101");
	Результат.Вставить("7", "101000111");
	Результат.Вставить("8", "111010001");
	Результат.Вставить("9", "1110101");
	Результат.Вставить("-", "1011101");
	
	///Старт/Стоп 1011001
	
	Возврат Результат;
	
КонецФункции //ФормулаКодировкиСимволовКод11()

// Функция - Формула кодировки символов код128
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиСимволовКод128() Экспорт
	
	СтруктураВозврата = Новый Структура;
	
	СоответствиеA = Новый Соответствие;
	///Тут коды символов.
	///Это все символы пробелов
	СоответствиеA.Вставить(32, "11011001100");
	СоответствиеA.Вставить(194, "11011001100");
	СоответствиеA.Вставить(207, "11011001100");
	СоответствиеA.Вставить(212, "11011001100");
	СоответствиеA.Вставить(252, "11011001100");
	///Это все символы пробелов
	СоответствиеA.Вставить(33, "11001101100");
	СоответствиеA.Вставить(34, "11001100110");
	СоответствиеA.Вставить(35, "10010011000");
	СоответствиеA.Вставить(36, "10010001100");
	СоответствиеA.Вставить(37, "10001001100");
	СоответствиеA.Вставить(38, "10011001000");
	СоответствиеA.Вставить(39, "10011000100");
	СоответствиеA.Вставить(40, "10001100100");
	СоответствиеA.Вставить(41, "11001001000");
	СоответствиеA.Вставить(42, "11001000100");
	СоответствиеA.Вставить(43, "11000100100");
	СоответствиеA.Вставить(44, "10110011100");
	СоответствиеA.Вставить(45, "10011011100");
	СоответствиеA.Вставить(46, "10011001110");
	СоответствиеA.Вставить(47, "10111001100");
	СоответствиеA.Вставить(48, "10011101100");
	СоответствиеA.Вставить(49, "10011100110");
	СоответствиеA.Вставить(50, "11001110010");
	СоответствиеA.Вставить(51, "11001011100");
	СоответствиеA.Вставить(52, "11001001110");
	СоответствиеA.Вставить(53, "11011100100");
	СоответствиеA.Вставить(54, "11001110100");
	СоответствиеA.Вставить(55, "11101101110");
	СоответствиеA.Вставить(56, "11101001100");
	СоответствиеA.Вставить(57, "11100101100");
	СоответствиеA.Вставить(58, "11100100110");
	СоответствиеA.Вставить(59, "11101100100");
	СоответствиеA.Вставить(60, "11100110100");
	СоответствиеA.Вставить(61, "11100110010");
	СоответствиеA.Вставить(62, "11011011000");
	СоответствиеA.Вставить(63, "11011000110");
	СоответствиеA.Вставить(64, "11000110110");
	СоответствиеA.Вставить(65, "10100011000");
	СоответствиеA.Вставить(66, "10001011000");
	СоответствиеA.Вставить(67, "10001000110");
	СоответствиеA.Вставить(68, "10110001000");
	СоответствиеA.Вставить(69, "10001101000");
	СоответствиеA.Вставить(70, "10001100010");
	СоответствиеA.Вставить(71, "11010001000");
	СоответствиеA.Вставить(72, "11000101000");
	СоответствиеA.Вставить(73, "11000100010");
	СоответствиеA.Вставить(74, "10110111000");
	СоответствиеA.Вставить(75, "10110001110");
	СоответствиеA.Вставить(76, "10001101110");
	СоответствиеA.Вставить(77, "10111011000");
	СоответствиеA.Вставить(78, "10111000110");
	СоответствиеA.Вставить(79, "10001110110");
	СоответствиеA.Вставить(80, "11101110110");
	СоответствиеA.Вставить(81, "11010001110");	
	СоответствиеA.Вставить(82, "11000101110");
	СоответствиеA.Вставить(83, "11011101000");
	СоответствиеA.Вставить(84, "11011100010");
	СоответствиеA.Вставить(85, "11011101110");
	СоответствиеA.Вставить(86, "11101011000");
	СоответствиеA.Вставить(87, "11101000110");
	СоответствиеA.Вставить(88, "11100010110");
	СоответствиеA.Вставить(89, "11101101000");
	СоответствиеA.Вставить(90, "11101100010");
	СоответствиеA.Вставить(91, "11100011010");
	СоответствиеA.Вставить(92, "11101111010");
	СоответствиеA.Вставить(93, "11001000010");
	СоответствиеA.Вставить(94, "11110001010");
	СоответствиеA.Вставить(95, "10100110000");
	СоответствиеA.Вставить(0, "10100001100");
	СоответствиеA.Вставить(1, "10010110000");
	СоответствиеA.Вставить(2, "10010000110");
	СоответствиеA.Вставить(3, "10000101100");
	СоответствиеA.Вставить(4, "10000100110");
	СоответствиеA.Вставить(5, "10110010000");
	СоответствиеA.Вставить(6, "10110000100");
	СоответствиеA.Вставить(7, "10011010000");
	СоответствиеA.Вставить(8, "10011000010");
	СоответствиеA.Вставить(9, "10000110100");
	СоответствиеA.Вставить(10, "10000110010");
	СоответствиеA.Вставить(11, "11000010010");
	СоответствиеA.Вставить(12, "11001010000");
	СоответствиеA.Вставить(13, "11110111010");
	СоответствиеA.Вставить(14, "11000010100");
	СоответствиеA.Вставить(15, "10001111010");
	СоответствиеA.Вставить(16, "10100111100");
	СоответствиеA.Вставить(17, "10010111100");
	СоответствиеA.Вставить(18, "10010011110");
	СоответствиеA.Вставить(19, "10111100100");
	СоответствиеA.Вставить(20, "10011110100");
	СоответствиеA.Вставить(21, "10011110010");
	СоответствиеA.Вставить(22, "11110100100");
	СоответствиеA.Вставить(23, "11110010100");
	СоответствиеA.Вставить(24, "11110010010");
	СоответствиеA.Вставить(25, "11011011110");
	СоответствиеA.Вставить(26, "11011110110");
	СоответствиеA.Вставить(27, "11110110110");
	СоответствиеA.Вставить(28, "10101111000");
	СоответствиеA.Вставить(29, "10100011110");
	СоответствиеA.Вставить(30, "10001011110");
	///Это все символ Del
	СоответствиеA.Вставить(195, "10111101000");
	СоответствиеA.Вставить(200, "10111101000");
	СоответствиеA.Вставить(240, "10111101000");
	///Это все символ Del
	///Это все символ FNC 3
	СоответствиеA.Вставить(196, "10111100010");
	СоответствиеA.Вставить(201, "10111100010");
	СоответствиеA.Вставить(241, "10111100010");
	///Это все символ FNC 3
	///Это все символ FNC 2
	СоответствиеA.Вставить(197, "11110101000");
	СоответствиеA.Вставить(202, "11110101000");
	СоответствиеA.Вставить(242, "11110101000");
	///Это все символ FNC 2
	///Это все символ SHIFT B
	СоответствиеA.Вставить(198, "11110100010");
	СоответствиеA.Вставить(203, "11110100010");
	СоответствиеA.Вставить(243, "11110100010");
	///Это все символ SHIFT B
	///Это все символ CODE C
	СоответствиеA.Вставить(199, "10111011110");
	СоответствиеA.Вставить(204, "10111011110");
	СоответствиеA.Вставить(244, "10111011110");
	///Это все символ CODE C
	///Это все символ CODE B
	СоответствиеA.Вставить(200, "10111101110");
	СоответствиеA.Вставить(205, "10111101110");
	СоответствиеA.Вставить(245, "10111101110");
	///Это все символ CODE B
	///Это все символ FNC 4
	СоответствиеA.Вставить(201, "11101011110");
	СоответствиеA.Вставить(206, "11101011110");
	СоответствиеA.Вставить(246, "11101011110");
	///Это все символ FNC 4
	///Это все символ FNC 1
	СоответствиеA.Вставить(202, "11110101110");
	СоответствиеA.Вставить(207, "11110101110");
	СоответствиеA.Вставить(247, "11110101110");
	///Это все символ FNC 1
	///Это все символ START A
	СоответствиеA.Вставить(203, "11010000100");
	СоответствиеA.Вставить(208, "11010000100");
	СоответствиеA.Вставить(248, "11010000100");
	///Это все символ START A
	///Это все символ START B
	СоответствиеA.Вставить(204, "11010010000");
	СоответствиеA.Вставить(209, "11010010000");
	СоответствиеA.Вставить(249, "11010010000");
	///Это все символ START B
	///Это все символ START C
	СоответствиеA.Вставить(205, "11010011100");
	СоответствиеA.Вставить(210, "11010011100");
	СоответствиеA.Вставить(250, "11010011100");
	///Это все символ START C
	///Это все Паттерн STOP
	СоответствиеA.Вставить(206, "110001110101");
	СоответствиеA.Вставить(211, "110001110101");
	СоответствиеA.Вставить(251, "110001110101");
	///Это все Паттерн STOP
	СоответствиеA.Вставить("START A", 203);
	СоответствиеA.Вставить("START B", 204);
	СоответствиеA.Вставить("START C", 205);
	СоответствиеA.Вставить("CODE B", 200);
	СоответствиеA.Вставить("SHIFT B", 198);
	СоответствиеA.Вставить("CODE C", 199);
	СоответствиеA.Вставить("FNC 1", 202);
	
	СоответствиеB = Новый Соответствие;
	///Тут коды символов.
	///Это все символы пробелов
	СоответствиеB.Вставить(32, "11011001100");
	СоответствиеB.Вставить(194, "11011001100");
	СоответствиеB.Вставить(207, "11011001100");
	СоответствиеB.Вставить(212, "11011001100");
	СоответствиеB.Вставить(252, "11011001100");
	///Это все символы пробелов
	СоответствиеB.Вставить(33, "11001101100");
	СоответствиеB.Вставить(34, "11001100110");
	СоответствиеB.Вставить(35, "10010011000");
	СоответствиеB.Вставить(36, "10010001100");
	СоответствиеB.Вставить(37, "10001001100");
	СоответствиеB.Вставить(38, "10011001000");
	СоответствиеB.Вставить(39, "10011000100");
	СоответствиеB.Вставить(40, "10001100100");
	СоответствиеB.Вставить(41, "11001001000");
	СоответствиеB.Вставить(42, "11001000100");
	СоответствиеB.Вставить(43, "11000100100");
	СоответствиеB.Вставить(44, "10110011100");
	СоответствиеB.Вставить(45, "10011011100");
	СоответствиеB.Вставить(46, "10011001110");
	СоответствиеB.Вставить(47, "10111001100");
	СоответствиеB.Вставить(48, "10011101100");
	СоответствиеB.Вставить(49, "10011100110");
	СоответствиеB.Вставить(50, "11001110010");
	СоответствиеB.Вставить(51, "11001011100");
	СоответствиеB.Вставить(52, "11001001110");
	СоответствиеB.Вставить(53, "11011100100");
	СоответствиеB.Вставить(54, "11001110100");
	СоответствиеB.Вставить(55, "11101101110");
	СоответствиеB.Вставить(56, "11101001100");
	СоответствиеB.Вставить(57, "11100101100");
	СоответствиеB.Вставить(58, "11100100110");
	СоответствиеB.Вставить(59, "11101100100");
	СоответствиеB.Вставить(60, "11100110100");
	СоответствиеB.Вставить(61, "11100110010");
	СоответствиеB.Вставить(62, "11011011000");
	СоответствиеB.Вставить(63, "11011000110");
	СоответствиеB.Вставить(64, "11000110110");
	СоответствиеB.Вставить(65, "10100011000");
	СоответствиеB.Вставить(66, "10001011000");
	СоответствиеB.Вставить(67, "10001000110");
	СоответствиеB.Вставить(68, "10110001000");
	СоответствиеB.Вставить(69, "10001101000");
	СоответствиеB.Вставить(70, "10001100010");
	СоответствиеB.Вставить(71, "11010001000");
	СоответствиеB.Вставить(72, "11000101000");
	СоответствиеB.Вставить(73, "11000100010");
	СоответствиеB.Вставить(74, "10110111000");
	СоответствиеB.Вставить(75, "10110001110");
	СоответствиеB.Вставить(76, "10001101110");
	СоответствиеB.Вставить(77, "10111011000");
	СоответствиеB.Вставить(78, "10111000110");
	СоответствиеB.Вставить(79, "10001110110");
	СоответствиеB.Вставить(80, "11101110110");
	СоответствиеB.Вставить(81, "11010001110");	
	СоответствиеB.Вставить(82, "11000101110");
	СоответствиеB.Вставить(83, "11011101000");
	СоответствиеB.Вставить(84, "11011100010");
	СоответствиеB.Вставить(85, "11011101110");
	СоответствиеB.Вставить(86, "11101011000");
	СоответствиеB.Вставить(87, "11101000110");
	СоответствиеB.Вставить(88, "11100010110");
	СоответствиеB.Вставить(89, "11101101000");
	СоответствиеB.Вставить(90, "11101100010");
	СоответствиеB.Вставить(91, "11100011010");
	СоответствиеB.Вставить(92, "11101111010");
	СоответствиеB.Вставить(93, "11001000010");
	СоответствиеB.Вставить(94, "11110001010");
	СоответствиеB.Вставить(95, "10100110000");
	СоответствиеB.Вставить(96, "10100001100");
	СоответствиеB.Вставить(97, "10010110000");
	СоответствиеB.Вставить(98, "10010000110");
	СоответствиеB.Вставить(99, "10000101100");
	СоответствиеB.Вставить(100, "10000100110");
	СоответствиеB.Вставить(101, "10110010000");
	СоответствиеB.Вставить(102, "10110000100");
	СоответствиеB.Вставить(103, "10011010000");
	СоответствиеB.Вставить(104, "10011000010");
	СоответствиеB.Вставить(105, "10000110100");
	СоответствиеB.Вставить(106, "10000110010");
	СоответствиеB.Вставить(107, "11000010010");
	СоответствиеB.Вставить(108, "11001010000");
	СоответствиеB.Вставить(109, "11110111010");
	СоответствиеB.Вставить(110, "11000010100");
	СоответствиеB.Вставить(111, "10001111010");
	СоответствиеB.Вставить(112, "10100111100");
	СоответствиеB.Вставить(113, "10010111100");
	СоответствиеB.Вставить(114, "10010011110");
	СоответствиеB.Вставить(115, "10111100100");
	СоответствиеB.Вставить(116, "10011110100");
	СоответствиеB.Вставить(117, "10011110010");
	СоответствиеB.Вставить(118, "11110100100");
	СоответствиеB.Вставить(119, "11110010100");
	СоответствиеB.Вставить(120, "11110010010");
	СоответствиеB.Вставить(121, "11011011110");
	СоответствиеB.Вставить(122, "11011110110");
	СоответствиеB.Вставить(123, "11110110110");
	СоответствиеB.Вставить(124, "10101111000");
	СоответствиеB.Вставить(125, "10100011110");
	СоответствиеB.Вставить(126, "10001011110");
	///Это все символ Del
	СоответствиеB.Вставить(195, "10111101000");
	СоответствиеB.Вставить(200, "10111101000");
	СоответствиеB.Вставить(240, "10111101000");
	///Это все символ Del
	///Это все символ FNC 3
	СоответствиеB.Вставить(196, "10111100010");
	СоответствиеB.Вставить(201, "10111100010");
	СоответствиеB.Вставить(241, "10111100010");
	///Это все символ FNC 3
	///Это все символ FNC 2
	СоответствиеB.Вставить(197, "11110101000");
	СоответствиеB.Вставить(202, "11110101000");
	СоответствиеB.Вставить(242, "11110101000");
	///Это все символ FNC 2
	///Это все символ SHIFT A
	СоответствиеB.Вставить(198, "11110100010");
	СоответствиеB.Вставить(203, "11110100010");
	СоответствиеB.Вставить(243, "11110100010");
	///Это все символ SHIFT A
	///Это все символ CODE C
	СоответствиеB.Вставить(199, "10111011110");
	СоответствиеB.Вставить(204, "10111011110");
	СоответствиеB.Вставить(244, "10111011110");
	///Это все символ CODE C
	///Это все символ FNC 4
	СоответствиеB.Вставить(200, "10111101110");
	СоответствиеB.Вставить(205, "10111101110");
	СоответствиеB.Вставить(245, "10111101110");
	///Это все символ FNC 4
	///Это все символ CODE A
	СоответствиеB.Вставить(201, "11101011110");
	СоответствиеB.Вставить(206, "11101011110");
	СоответствиеB.Вставить(246, "11101011110");
	///Это все символ CODE A
	///Это все символ FNC 1
	СоответствиеB.Вставить(202, "11110101110");
	СоответствиеB.Вставить(207, "11110101110");
	СоответствиеB.Вставить(247, "11110101110");
	///Это все символ FNC 1
	///Это все символ START A
	СоответствиеB.Вставить(203, "11010000100");
	СоответствиеB.Вставить(208, "11010000100");
	СоответствиеB.Вставить(248, "11010000100");
	///Это все символ START A
	///Это все символ START B
	СоответствиеB.Вставить(204, "11010010000");
	СоответствиеB.Вставить(209, "11010010000");
	СоответствиеB.Вставить(249, "11010010000");
	///Это все символ START B
	///Это все символ START C
	СоответствиеB.Вставить(205, "11010011100");
	СоответствиеB.Вставить(210, "11010011100");
	СоответствиеB.Вставить(250, "11010011100");
	///Это все символ START C
	///Это все Паттерн STOP
	СоответствиеB.Вставить(206, "110001110101");
	СоответствиеB.Вставить(211, "110001110101");
	СоответствиеB.Вставить(251, "110001110101");
	///Это все Паттерн STOP
	СоответствиеB.Вставить("START A", 203);
	СоответствиеB.Вставить("START B", 204);
	СоответствиеB.Вставить("START C", 205);
	СоответствиеB.Вставить("CODE A", 201);
	СоответствиеB.Вставить("SHIFT A", 198);
	СоответствиеB.Вставить("CODE C", 199);
	СоответствиеB.Вставить("FNC 1", 202);
	
	///ВАЖНО! СоответствиеB используется для КС
	СоответствиеС = Новый Соответствие;
	СоответствиеС.Вставить("00", "11011001100");
	СоответствиеС.Вставить("01", "11001101100");
	СоответствиеС.Вставить("02", "11001100110");
	СоответствиеС.Вставить("03", "10010011000");
	СоответствиеС.Вставить("04", "10010001100");
	СоответствиеС.Вставить("05", "10001001100");
	СоответствиеС.Вставить("06", "10011001000");
	СоответствиеС.Вставить("07", "10011000100");
	СоответствиеС.Вставить("08", "10001100100");
	СоответствиеС.Вставить("09", "11001001000");
	СоответствиеС.Вставить("10", "11001000100");
	СоответствиеС.Вставить("11", "11000100100");
	СоответствиеС.Вставить("12", "10110011100");
	СоответствиеС.Вставить("13", "10011011100");
	СоответствиеС.Вставить("14", "10011001110");
	СоответствиеС.Вставить("15", "10111001100");
	СоответствиеС.Вставить("16", "10011101100");
	СоответствиеС.Вставить("17", "10011100110");
	СоответствиеС.Вставить("18", "11001110010");
	СоответствиеС.Вставить("19", "11001011100");
	СоответствиеС.Вставить("20", "11001001110");
	СоответствиеС.Вставить("21", "11011100100");
	СоответствиеС.Вставить("22", "11001110100");
	СоответствиеС.Вставить("23", "11101101110");
	СоответствиеС.Вставить("24", "11101001100");
	СоответствиеС.Вставить("25", "11100101100");
	СоответствиеС.Вставить("26", "11100100110");
	СоответствиеС.Вставить("27", "11101100100");
	СоответствиеС.Вставить("28", "11100110100");
	СоответствиеС.Вставить("29", "11100110010");
	СоответствиеС.Вставить("30", "11011011000");
	СоответствиеС.Вставить("31", "11011000110");
	СоответствиеС.Вставить("32", "11000110110");
	СоответствиеС.Вставить("33", "10100011000");
	СоответствиеС.Вставить("34", "10001011000");
	СоответствиеС.Вставить("35", "10001000110");
	СоответствиеС.Вставить("36", "10110001000");
	СоответствиеС.Вставить("37", "10001101000");
	СоответствиеС.Вставить("38", "10001100010");
	СоответствиеС.Вставить("39", "11010001000");
	СоответствиеС.Вставить("40", "11000101000");
	СоответствиеС.Вставить("41", "11000100010");
	СоответствиеС.Вставить("42", "10110111000");
	СоответствиеС.Вставить("43", "10110001110");
	СоответствиеС.Вставить("44", "10001101110");
	СоответствиеС.Вставить("45", "10111011000");
	СоответствиеС.Вставить("46", "10111000110");
	СоответствиеС.Вставить("47", "10001110110");
	СоответствиеС.Вставить("48", "11101110110");
	СоответствиеС.Вставить("49", "11010001110");	
	СоответствиеС.Вставить("50", "11000101110");
	СоответствиеС.Вставить("51", "11011101000");
	СоответствиеС.Вставить("52", "11011100010");
	СоответствиеС.Вставить("53", "11011101110");
	СоответствиеС.Вставить("54", "11101011000");
	СоответствиеС.Вставить("55", "11101000110");
	СоответствиеС.Вставить("56", "11100010110");
	СоответствиеС.Вставить("57", "11101101000");
	СоответствиеС.Вставить("58", "11101100010");
	СоответствиеС.Вставить("59", "11100011010");
	СоответствиеС.Вставить("60", "11101111010");
	СоответствиеС.Вставить("61", "11001000010");
	СоответствиеС.Вставить("62", "11110001010");
	СоответствиеС.Вставить("63", "10100110000");
	СоответствиеС.Вставить("64", "10100001100");
	СоответствиеС.Вставить("65", "10010110000");
	СоответствиеС.Вставить("66", "10010000110");
	СоответствиеС.Вставить("67", "10000101100");
	СоответствиеС.Вставить("68", "10000100110");
	СоответствиеС.Вставить("69", "10110010000");
	СоответствиеС.Вставить("70", "10110000100");
	СоответствиеС.Вставить("71", "10011010000");
	СоответствиеС.Вставить("72", "10011000010");
	СоответствиеС.Вставить("73", "10000110100");
	СоответствиеС.Вставить("74", "10000110010");
	СоответствиеС.Вставить("75", "11000010010");
	СоответствиеС.Вставить("76", "11001010000");
	СоответствиеС.Вставить("77", "11110111010");
	СоответствиеС.Вставить("78", "11000010100");
	СоответствиеС.Вставить("79", "10001111010");
	СоответствиеС.Вставить("80", "10100111100");
	СоответствиеС.Вставить("81", "10010111100");
	СоответствиеС.Вставить("82", "10010011110");
	СоответствиеС.Вставить("83", "10111100100");
	СоответствиеС.Вставить("84", "10011110100");
	СоответствиеС.Вставить("85", "10011110010");
	СоответствиеС.Вставить("86", "11110100100");
	СоответствиеС.Вставить("87", "11110010100");
	СоответствиеС.Вставить("88", "11110010010");
	СоответствиеС.Вставить("89", "11011011110");
	СоответствиеС.Вставить("90", "11011110110");
	СоответствиеС.Вставить("91", "11110110110");
	СоответствиеС.Вставить("92", "10101111000");
	СоответствиеС.Вставить("93", "10100011110");
	СоответствиеС.Вставить("94", "10001011110");
	СоответствиеС.Вставить("95", "10111101000");
	СоответствиеС.Вставить("96", "10111100010");
	СоответствиеС.Вставить("97", "11110101000");
	СоответствиеС.Вставить("98", "11110100010");
	СоответствиеС.Вставить("99", "10111011110");
	///Это все символ Code B
	СоответствиеС.Вставить("100", "10111101110");
	///Это все символ Code B
	///Это все символ CODE A
	СоответствиеС.Вставить("101", "11101011110");
	///Это все символ CODE A
	///Это все символ FNC 1
	СоответствиеС.Вставить("102", "11110101110");
	///Это все символ FNC 1
	///Это все символ START A
	СоответствиеС.Вставить("103", "11010000100");
	///Это все символ START A
	///Это все символ START B
	СоответствиеС.Вставить("104", "11010010000");
	///Это все символ START B
	///Это все символ START C
	СоответствиеС.Вставить("105", "11010011100");
	///Это все символ START C
	///Это все Паттерн STOP
	СоответствиеС.Вставить(206, "110001110101");
	///Это все Паттерн STOP
	СоответствиеС.Вставить("START A", "103");
	СоответствиеС.Вставить("START B", "104");
	СоответствиеС.Вставить("START C", "105");
	СоответствиеС.Вставить("CODE A", "101");
	СоответствиеС.Вставить("CODE B", "100");
	СоответствиеС.Вставить("FNC 1", "102");
	
	СтруктураВозврата.Вставить("A", СоответствиеA);
	СтруктураВозврата.Вставить("B", СоответствиеB);
	СтруктураВозврата.Вставить("C", СоответствиеС);
	
	Возврат СтруктураВозврата;
	
КонецФункции // ФормулаКодировкиСимволовКод128()

// Функция - Формула кодировки пар символов2на5
// 
// Возвращаемое значение:
//   - 
//
Функция ФормулаКодировкиПарСимволов2на5() Экспорт
	
	///ИндексВПаре = 1;
	КодировкаЦифр = Новый Соответствие;
	///1 узкий модуль, 3 широкий
	КодировкаЦифр.Вставить("0", "11331");
	КодировкаЦифр.Вставить("1", "31113");
	КодировкаЦифр.Вставить("2", "13113");
	КодировкаЦифр.Вставить("3", "33111");
	КодировкаЦифр.Вставить("4", "11313");
	КодировкаЦифр.Вставить("5", "31311");
	КодировкаЦифр.Вставить("6", "13311");
	КодировкаЦифр.Вставить("7", "11133");
	КодировкаЦифр.Вставить("8", "31131");
	КодировкаЦифр.Вставить("9", "13131");
	
	КодировкаПар = Новый Соответствие;
	
	Для Элемент = 0 По 99 Цикл
		КонкатенацияБинарнойСтроки = "";
		Если Элемент < 10 Тогда
			ПервыйЭлементПары = КодировкаЦифр["0"];
			ВторойЭлементПары = КодировкаЦифр[Строка(Элемент)];
			Ключ = "0" + Строка(Элемент);
		Иначе
			ПервыйЭлементПары = КодировкаЦифр[Сред(Строка(Элемент), 1, 1)];
			ВторойЭлементПары = КодировкаЦифр[Сред(Строка(Элемент), 2, 1)];
			Ключ = Сред(Строка(Элемент), 1, 1) + Сред(Строка(Элемент), 2, 1);
		КонецЕсли;
		Для Индекс = 1 По 5 Цикл
			КонкатенацияБинарнойСтроки = КонкатенацияБинарнойСтроки + ?(Сред(ПервыйЭлементПары, Индекс, 1)="1", "1", "111") + ?(Сред(ВторойЭлементПары, Индекс, 1)="1", "0", "000");		
		КонецЦикла;
		КодировкаПар.Вставить(Ключ, КонкатенацияБинарнойСтроки);
	КонецЦикла;
	
	Возврат КодировкаПар;
	
КонецФункции // ФормулаКодировкиПарСимволов2на5()

// Функция - Кодировка символов EAN
// 
// Возвращаемое значение:
//   - 
//
Функция КодировкаСимволовEAN() Экспорт	
	
	Результат = Новый Соответствие;
	
	Результат.Вставить("0L", "0001101");	
	Результат.Вставить("0R", "1110010");	
	Результат.Вставить("0G", "0100111");
	
	Результат.Вставить("1L", "0011001");
	Результат.Вставить("1R", "1100110");
	Результат.Вставить("1G", "0110011");
	
	Результат.Вставить("2L", "0010011");
	Результат.Вставить("2R", "1101100");
	Результат.Вставить("2G", "0011011");
	
	Результат.Вставить("3L", "0111101");
	Результат.Вставить("3R", "1000010");
	Результат.Вставить("3G", "0100001");
	
	Результат.Вставить("4L", "0100011");
	Результат.Вставить("4R", "1011100");
	Результат.Вставить("4G", "0011101");
	
	Результат.Вставить("5L", "0110001");
	Результат.Вставить("5R", "1001110");
	Результат.Вставить("5G", "0111001");
	
	Результат.Вставить("6L", "0101111");
	Результат.Вставить("6R", "1010000");
	Результат.Вставить("6G", "0000101");
	
	Результат.Вставить("7L", "0111011");
	Результат.Вставить("7R", "1000100");
	Результат.Вставить("7G", "0010001");
	
	Результат.Вставить("8L", "0110111");
	Результат.Вставить("8R", "1001000");
	Результат.Вставить("8G", "0001001");
	
	Результат.Вставить("9L", "0001011");
	Результат.Вставить("9R", "1110100");
	Результат.Вставить("9G", "0010111");
	
	Возврат Результат;
	
КонецФункции

// Функция - Получить параметры штрихкода по умолчанию
//
// Параметры:
//  ТипШтрихкода - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ПолучитьПараметрыШтрихкодаПоУмолчанию(ЗНАЧ ТипШтрихкода) Экспорт
		
	///Цвет фона штрихкода проще всего устанавливать в табличном документе, а не в SVG
	Шрифт = Новый Шрифт("monospace", 12);
	Результат = Новый Структура("Шрифт, ПоложениеТекстаПоГоризонтали, ПоложениеТекстаПоВертикали, Трекинг, ЦветШтрихкода, ЦветСимволовТекста");
	Результат.Вставить("ЦветШтрихкода", Новый Цвет(0, 0, 0));
	Результат.Вставить("ЦветСимволовТекста", Новый Цвет(0, 0, 0));
	
	Если ТипШтрихкода = "EAN13" ИЛИ ТипШтрихкода = "EAN13AddOn2" Тогда 
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 14));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 24.5);
		Результат.Вставить("Трекинг", 0);
	ИначеЕсли ТипШтрихкода = "EAN8" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 13));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 3);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 20);
		Результат.Вставить("Трекинг", 0);
	ИначеЕсли ТипШтрихкода = "PHARMACODE" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 0));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 100);
		Результат.Вставить("Трекинг", 0);
	ИначеЕсли ТипШтрихкода = "MSI" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 16));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 91);
		Результат.Вставить("Трекинг", 2);
	ИначеЕсли ТипШтрихкода = "CODABAR" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 8));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 46);
		Результат.Вставить("Трекинг", 2);
	ИначеЕсли ТипШтрихкода = "CODE39" ИЛИ ТипШтрихкода = "CODE39FullASCII" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 14));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 91);
		Результат.Вставить("Трекинг", 5);
	ИначеЕсли ТипШтрихкода = "CODE93" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 14));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 91);
		Результат.Вставить("Трекинг", 2);
	ИначеЕсли ТипШтрихкода = "CODE128" ИЛИ ТипШтрихкода = "EAN128" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 14));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 73);
		Результат.Вставить("Трекинг", 1);
	ИначеЕсли ТипШтрихкода = "CODE2OF5" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 14));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 80);
		Результат.Вставить("Трекинг", 2);
	ИначеЕсли ТипШтрихкода = "INDUSTRIAL2OF5" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 14));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 72);
		Результат.Вставить("Трекинг", 2);
	ИначеЕсли ТипШтрихкода = "EAN128" ИЛИ ТипШтрихкода = "CODE16K" ИЛИ ТипШтрихкода = "PDF417" 
		ИЛИ ТипШтрихкода = "CODE39FullASCII" ИЛИ ТипШтрихкода = "CODE93FullASCII" ИЛИ ТипШтрихкода = "RSS14" 
		ИЛИ ТипШтрихкода = "EAN13AddOn2" ИЛИ ТипШтрихкода = "EAN13AddOn5" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 14));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 80);
		Результат.Вставить("Трекинг", 2);
	ИначеЕсли ТипШтрихкода = "CODE11" Тогда 	
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 12));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 80);
		Результат.Вставить("Трекинг", 6);
	ИначеЕсли ТипШтрихкода = "ITF14" Тогда
		Результат.Вставить("Шрифт", Новый Шрифт(Шрифт, Шрифт.Имя, 26));
		Результат.Вставить("ПоложениеТекстаПоГоризонтали", 0);
		Результат.Вставить("ПоложениеТекстаПоВертикали", 45);
		Результат.Вставить("Трекинг", 3);
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции // ПолучитьПараметрыШтрихкодаПоУмолчанию()

// Функция - Получить соответствие тип кода по числовому значению
// 
// Возвращаемое значение:
//   - 
//
Функция ПолучитьСоответствиеТипКодаПоЧисловомуЗначению() Экспорт

	СоответствиеТипов = Новый Соответствие;
	СоответствиеТипов.Вставить(0, "EAN8");
	СоответствиеТипов.Вставить(1, "EAN13");
	СоответствиеТипов.Вставить(2, "EAN128");
	СоответствиеТипов.Вставить(3, "CODE39");
	СоответствиеТипов.Вставить(4, "CODE128");
	СоответствиеТипов.Вставить(5, "CODE16K"); ///как бы 2D, но в списке обычной компоненты присутствует
	СоответствиеТипов.Вставить(6, "PDF417"); ///как бы 2D, но в списке обычной компоненты присутствует
	СоответствиеТипов.Вставить(7, "INDUSTRIAL2OF5");
	СоответствиеТипов.Вставить(8, "CODE2OF5");
	СоответствиеТипов.Вставить(9, "CODE39FullASCII");
	СоответствиеТипов.Вставить(10, "CODE93");
	СоответствиеТипов.Вставить(11, "ITF14");
	СоответствиеТипов.Вставить(12, "RSS14");
	СоответствиеТипов.Вставить(13, "CODABAR");
	СоответствиеТипов.Вставить(14, "EAN13AddOn2");
	СоответствиеТипов.Вставить(15, "EAN13AddOn5");
	СоответствиеТипов.Вставить(30, "FARMACODE");
	СоответствиеТипов.Вставить(31, "MSI");
	СоответствиеТипов.Вставить(32, "CODE93FullASCII");
	СоответствиеТипов.Вставить(33, "CODE11");
	
	Возврат СоответствиеТипов;

КонецФункции // ПолучитьСоответствиеТипКодаПоЧисловомуЗначению()

// Функция - Получить карту идентификаторов применения GS1 128
// 
// Возвращаемое значение:
//   - 
//
Функция ПолучитьКартуИдентификаторовПримененияGS1_128() Экспорт
	
	Результат = Новый Соответствие;

	Результат.Вставить("00", "Глобально-уникальный код грузовых контейнеров (Serial Shipping Container Code (SSCC))" + "^" + "[0-9]" + "^" + "18");
	Результат.Вставить("01",	"Глобально-уникальный номер торговых продуктов (Global Trade Item Number (GTIN))" + "^" + "[0-9]" + "^" + "14");
	Результат.Вставить("02",	"GTIN содержащихся в грузе торговых продуктов (GTIN of Contained Trade Items)" + "^" + "[0-9]" + "^" + "14");
	Результат.Вставить("10",	"Номер партии/лота (Batch/Lot Number)" + "^" + "[&#032;-&#127;]" + "^" + "1,20");
	Результат.Вставить("11",	"Дата производства (Production Date)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("12",	"Дата, до которой необходимо оплатить счет (Due Date)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("13",	"Дата упаковки (Packaging Date)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("15",	"Дата, до которой лучше всего использовать товар (Best Before Date)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("17",	"Дата истечения срока годности (Expiration Date)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("20",	"Вариант исполнения продукта (Product Variant)" + "^" + "[&#032;-&#127;]" + "^" + "2");
	Результат.Вставить("21",	"Серийный номер (Serial Number)" + "^" + "[&#032;-&#127;]" + "^" + "1,20");
	Результат.Вставить("240",	"Дополнительный идентификатор продукта (Additional Product Identification)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("241",	"Номер партии по данным заказчика (Customer Part Number)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("242",	"Номер изготовленного под заказ варианта (Made-to-Order Variation Number)" + "^" + "[&#032;-&#127;]" + "^" + "6");
	Результат.Вставить("250",	"Второй серийный номер (Secondary Serial Number)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("251",	"Ссылка на исходную запись (Reference to Source Entity)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("253",	"Глобально-уникальный идентификатор типа документа (Global Document Type Identifier (GDTI))" + "^" + "[&#032;-&#127;]" + "^" + "13,30");
	Результат.Вставить("254",	"Расширенный компонент глобально-уникального номера местонахождений (Global Location Number (GLN) Extension Component))" + "^" + "[&#032;-&#127;]" + "^" + "1,20");
	Результат.Вставить("255",	"Глобально-уникальный номер купона (Global Coupon Number (GCN))" + "^" + "[&#032;-&#127;]" + "^" + "13,25");
	Результат.Вставить("30",	"Количество грузовых мест (Count of items)" + "^" + "[0-9]" + "^" + "1, 8");
	Результат.Вставить("310y",	"Вес нетто в килограммах (Product Net Weight in kg)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("311y",	"Длина/1-е измерение в метрах (Product Length/1st Dimension, in meters)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("312y",	"Ширина/Диаметр/2-е измерение в метрах (Product Width/Diameter/2nd Dimension, in meters)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("313y",	"Глубина/Толщина/Высота/3-е измерение в метрах (Product Depth/Thickness/Height/3rd Dimension, in meters)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("314y",	"Площадь в квадратных метрах (Product Area, in square meters)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("315y",	"Объем нетто в литрах (Product Net Volume, in liters)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("316y",	"Объем нетто в кубических метрах (Product Net Volume, in cubic meters)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("320y",	"Вес нетто в фунтах (Product Net Weight, in pounds)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("321y",	"Длина/1-е измерение в дюймах (Product Length/1st Dimension, in inches)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("322y",	"Длина/1-е измерение в футах (Product Length/1st Dimension, in feet)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("323y",	"Длина/1-е измерение в ярдах (Product Length/1st Dimension, in yards" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("324y",	"Ширина/Диаметр/2-е измерение в дюймах (Product Width/Diameter/2nd Dimension, in inches)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("325y",	"Ширина/Диаметр/2-е измерение в футах (Product Width/Diameter/2nd Dimension, in feet)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("326y",	"Ширина/Диаметр/2-е измерение в ярдах (Product Width/Diameter/2nd Dimension, in yards)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("327y",	"Глубина/Толщина/Высота/3-е измерение в дюймах (Product Depth/Thickness/Height/3rd Dimension, in inches)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("328y",	"Глубина/Толщина/Высота/3-е измерение в футах (Product Depth/Thickness/Height/3rd Dimension, in feet)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("329y",	"Глубина/Толщина/Высота/3-е измерение в ярдах (Product Depth/Thickness/3rd Dimension, in yards)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("330y",	"Вес брутто контейнера в килограммах (Container Gross Weight (kg))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("331y",	"Длина/1-е измерение контейнера в метрах (Container Length/1st Dimension (Meters))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("332y",	"Ширина/Диаметр/2-е измерение контейнера в метрах (Container Width/Diameter/2nd Dimension (Meters))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("333y",	"Глубина/Толщина/Высота/3-е измерение контейнера в метрах (Container Depth/Thickness/3rd Dimension (Meters))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("334y",	"Площадь контейнера (Container Area (Square Meters))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("335y",	"Объем брутто контейнера в литрах ((Container Gross Volume (Liters))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("336y",	"Объем брутто контейнера в кубических метрах (Container Gross Volume (Cubic Meters))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("340y",	"Вес брутто контейнера в фунтах (Container Gross Weight (Pounds))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("341y",	"Длина/1-е измерение контейнера в дюймах (Container Length/1st Dimension, in inches)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("342y",	"Длина/1-е измерение контейнера в футах (Container Length/1st Dimension, in feet)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("343y",	"Длина/1-е измерение контейнера в ярдах (Container Length/1st Dimension in, in yards)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("344y",	"Ширина/Диаметр/2-е измерение контейнера в дюймах (Container Width/Diameter/2nd Dimension, in inches)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("345y",	"Ширина/Диаметр/2-е измерение контейнера в футах (Container Width/Diameter/2nd Dimension, in feet)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("346y",	"Ширина/Диаметр/2-е измерение контейнера в ярдах (Container Width/Diameter/2nd Dimension, in yards)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("347y",	"Глубина/Толщина/Высота/3-е измерение контейнера в дюймах (Container Depth/Thickness/Height/3rd Dimension, in inches)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("348y",	"Глубина/Толщина/Высота/3-е измерение контейнера в футах (Container Depth/Thickness/Height/3rd Dimension, in feet)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("349y",	"Глубина/Толщина/Высота/3-е измерение контейнера в ярдах (Container Depth/Thickness/Height/3rd Dimension, in yards)" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("350y",	"Площадь в квадратных дюймах (Product Area (Square Inches))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("351y",	"Площадь в квадратных футах (Product Area (Square Feet))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("352y",	"Площадь в квадратных ярдах (Product Area (Square Yards))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("353y",	"Площадь контейнера в квадратных дюймах (Container Area (Square Inches))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("354y",	"Площадь контейнера в квадратных футах (Container Area (Square Feet))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("355y",	"Площадь контейнера в квадратных ярдах (Container Area (Square Yards))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("356y",	"Вес нетто в тройских унциях (Net Weight (Troy Ounces))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("357y",	"Вес/объем в унциях (Net Weight/Volume (Ounces))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("360y",	"Объем в квартах (Product Volume (Quarts))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("361y",	"Объем в галлонах (Product Volume (Gallons))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("362y",	"Объем брутто контейнера в квартах (Container Gross Volume (Quarts))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("363y",	"Объем брутто контейнера в американских галлонах (Container Gross Volume (U.S. Gallons))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("364y",	"Объем в кубических дюймах (Product Volume (Cubic Inches))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("365y",	"Объем в кубических футах (Product Volume (Cubic Feet))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("366y",	"Объем в кубических ярдах (Product Volume (Cubic Yards))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("367y",	"Объем брутто контейнера в кубических дюймах (Container Gross Volume (Cubic Inches))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("368y",	"Объем брутто контейнера в кубических футах (Container Gross Volume (Cubic Feet))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("369y",	"Объем брутто контейнера в кубических ярдах (Container Gross Volume (Cubic Yards))" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("37",	"Количество содержащихся торговых единиц (Number of Units Contained)" + "^" + "[0-9]" + "^" + "1,8");
	Результат.Вставить("390y",	"Сумма к оплате в местной валюте (Amount payable (local currency))" + "^" + "[0-9]" + "^" + "1,15");
	Результат.Вставить("391y",	"Сумма к оплате с кодом валюты ISO (Amount payable (with ISO currency code))" + "^" + "[0-9]" + "^" + "4,18");
	Результат.Вставить("392y",	"Сумма к оплате за одно место в местной валюте (Amount payable per single item (local currency))" + "^" + "[0-9]" + "^" + "1,15");
	Результат.Вставить("393y",	"Сумма к оплате за одно место с кодом валюты ISO (Amount payable per single item (with ISO currency code))" + "^" + "[0-9]" + "^" + "4,18");
	Результат.Вставить("400",	"Номер заказа клиента (Customer Purchase Order Number)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("401",	"Глобальный идентификатор номера груза (GINC) (Global Identification Number for Consignment)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("402",	"Глобальный идентификационный номер отправления (GSIN) (Global Shipment Identification Number)" + "^" + "[&#032;-&#127;]" + "^" + "1,17");
	Результат.Вставить("403",	"Код маршрута (Routing code)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("410",	"Отгрузить в/доставить до местонахождения (GLN) (Ship To/Deliver To Location Code (Global Location Number)" + "^" + "[&#032;-&#127;]" + "^" + "13");
	Результат.Вставить("411",	"Код местонахождения для выставления счета/инвойса (GLN) (Bill To/Invoice Location Code (Global Location Number))" + "^" + "[&#032;-&#127;]" + "^" + "13");
	Результат.Вставить("412",	"Код местонахождения совершения покупки (Purchase From Location Code (Global Location Number)" + "^" + "[&#032;-&#127;]" + "^" + "13");
	Результат.Вставить("413",	"Отгрузить из/Доставить из/Переслать в местонахождение (GLN) (Ship for, Deliver for, or Forward to Location Code (Global Location Number))" + "^" + "[&#032;-&#127;]" + "^" + "13");
	Результат.Вставить("414",	"Идентификатор физического местонахождения (GLN) (Identification of a physical location (Global Location Number))" + "^" + "[&#032;-&#127;]" + "^" + "13");
	Результат.Вставить("420",	"Отгрузить в/доставить до почтового индекса (в рамках одного почтового оператора) (Ship To/Deliver To Postal Code (Single Postal Authority))" + "^" + "[&#032;-&#127;]" + "^" + "1,20");
	Результат.Вставить("421",	"Отгрузить в/доставить до почтового индекса (с кодом страны по ISO) (Ship To/Deliver To Postal Code (with ISO country code))" + "^" + "[&#032;-&#127;]" + "^" + "3,20");
	Результат.Вставить("422",	"Страна происхождения (код страны по ISO) (Country of Origin (ISO country code))" + "^" + "[&#032;-&#127;]" + "^" + "3");
	Результат.Вставить("423",	"Страна или страны начала обработки (Country or countries of initial processing)" + "^" + "[&#032;-&#127;]" + "^" + "3,15");
	Результат.Вставить("424",	"Страна обработки (Country of processing)" + "^" + "[&#032;-&#127;]" + "^" + "3");
	Результат.Вставить("425",	"Страна разборки (Country of disassembly)" + "^" + "[&#032;-&#127;]" + "^" + "3");
	Результат.Вставить("426",	"Страна полного цикла обработки (Country of full process chain)" + "^" + "[&#032;-&#127;]" + "^" + "3");
	Результат.Вставить("7001",	"Инвентаризационный номер NATO (NATO Stock Number (NSN))" + "^" + "[&#032;-&#127;]" + "^" + "13");
	Результат.Вставить("7002",	"UN-/ECE-классификация туш и отрубов (UN/ECE Meat Carcasses and cuts classification)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("7003",	"Дата и время истечения строка годности (Expiration date and time)" + "^" + "[0-9]" + "^" + "10");
	Результат.Вставить("7004",	"Потенциал действия" + "^" + "[&#032;-&#127;]" + "^" + "1,4");
	Результат.Вставить("8001",	"Характеристики рулона: ширина/длина/диаметр сердечника/направление/сращения (Roll Products: Width/Length/Core Diameter/Direction/Splices)" + "^" + "[0-9]" + "^" + "14");
	Результат.Вставить("8002",	"Идентификатор сотового телефона (Cellular mobile telephone identifier)" + "^" + "[&#032;-&#127;]" + "^" + "1,20");
	Результат.Вставить("8003",	"Global Returnable Asset Identifier" + "^" + "[&#032;-&#127;]" + "^" + "14,30");
	Результат.Вставить("8004",	"Global Individual Asset Identifier" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("8005",	"Price per Unit of Measure" + "^" + "[0-9]" + "^" + "6");
	Результат.Вставить("8006",	"identification of the components of an item" + "^" + "[&#032;-&#127;]" + "^" + "18");
	Результат.Вставить("8007",	"International Bank Account Number" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("8008",	"Date/time of production" + "^" + "[&#032;-&#127;]" + "^" + "8,12");
	Результат.Вставить("8018",	"Global Service Relationship Number" + "^" + "[&#032;-&#127;]" + "^" + "18");
	Результат.Вставить("8020",	"Payment slip reference number" + "^" + "[&#032;-&#127;]" + "^" + "1,25");
	Результат.Вставить("8100",	"Coupon Extended Code: Number System and Offer" + "^" + "[&#032;-&#127;]" + "^" + "6");
	Результат.Вставить("8101",	"Coupon Extended Code: Number System, Offer, End of Offer" + "^" + "[&#032;-&#127;]" + "^" + "10");
	Результат.Вставить("8102",	"Coupon Extended Code: Number System preceded by 0" + "^" + "[&#032;-&#127;]" + "^" + "2");
	Результат.Вставить("8110",	"Coupon code ID (North America)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("8200",	"Extended Packaging URL" + "^" + "[&#032;-&#127;]" + "^" + "1,70");
	Результат.Вставить("90",	"По договоренности между торговым партнерами (Mutually Agreed Between Trading Partners)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("91",	"Коды, назначаемые внутри компании (Internal Company Codes)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("92",	"Коды, назначаемые внутри компании (Internal Company Codes)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("93",	"Коды, назначаемые внутри компании (Internal Company Codes)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("94",	"Коды, назначаемые внутри компании (Internal Company Codes)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("95",	"Коды, назначаемые внутри компании (Internal Company Codes)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("96",	"Коды, назначаемые внутри компании (Internal Company Codes)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("97",	"Коды, назначаемые внутри компании (Internal Company Codes)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("98",	"Коды, назначаемые внутри компании (Internal Company Codes)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	Результат.Вставить("99",	"Коды, назначаемые внутри компании (Internal Company Codes)" + "^" + "[&#032;-&#127;]" + "^" + "1,30");
	
	Возврат Результат;
	
КонецФункции // ПолучитьКартуИдентификаторовПримененияGS1_128()
